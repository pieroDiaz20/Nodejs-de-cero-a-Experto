LA IDEA DE JSON WEB TOKEN ES QUE LES PERMITA A NUESTROS CLIENTES TENER ESA AUTENTICACION PASIVA
SE COMPONE DE 3 PARTES:
HEADER:CONTIENE INFORMACION SOBRE EL ALGORITMO UTILIZADO PARA LA ENCRIPTACION JUNTO CON EL TIPO DE TOKEN JWT
PAYLOAD:CONTIENE LA INFORMACION QUE NOSOTROS QUEREMOS QUE ESTE EN EL TOKEN.
FIRMA:LA FIRMA ES ALGO QUE LE PERMITE AL JWT O A LOS VERIFICADORES DE JWT SI EL TOKEN ES VALIDO .ES DECIR CUANDO FIRMEMOS Y NO REGRESAN COMO
LO ENVIAMOS NO SE ACEPTARAN LOS TOKENS


PAYLOAD:eL PAILOT ES SUMAMENTE VOLATIL Y CUALQUIER PERSONA CON UN CODIGO PUEDE ABRIR EL JSON WEB TOKEN Y VER LA INFORMACION

nO GUARDAR EN JSON WEB TOKEN CONTRASENAS O INFORMACION SENSIBLE.SOLO ID O IDENTIFICADOR DE ID DE USUARIO
NUESTRO BACKEND VA A VALIDAR QUE EL JSON WEB TOKEN NO HAYA SIDO MANIPULADO O ALTERADO DE NINGUNA MANERA, QUE LA FIRMA EXISTA Y 
QUE TODABIA SIGA VIGENTE Y SI CUALQUIERA DE ELLAS NOSE CUMPLE HARA QUE NUESTRO JSON WEB TOKEN SEA DESCARTADO POR EL BACKEND Y DIGA NO,
ESTA PERSONA MANIPULO EL JSON WEB TOKEN, NO LO ACEPTARE

CUANDO GUARDEMOS EL ID Y CADA QUE LO VALIDEMOS SE SABRA TODA LA INFORMACION DEL USUARIO TAL CUAL ESTA SU INFORMACION EN EL BACKEND SIN 
H29kyg7c
RESIBIR MAYOR INFORMACION DEL FROND END	

pasos :
crear en 
carpeta controlador

carpeta rutas 

1.  carpeta modelo/server.js
-Constructor(){this.autchPath = '/api/auth'  //nueva ruta}
-routes(){this.app.use(this.autchPath,require('../routes/auth'))}      //crear ese auth en la carpeta routes.
2.  carpeta routes/nuevo archivo auth.js
-